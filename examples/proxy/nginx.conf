worker_processes  1;

events {
    worker_connections  1024;
}

http {

    upstream docker-registry {
        server docker-registry:5000;
    }

    ldap_server ldapserver {
        url ldap://ldap/dc=example,dc=com?uid?sub?(objectClass=person);
        binddn "cn=admin,dc=example,dc=com";
        binddn_passwd toor;
        group_attribute member;
        group_attribute_is_dn on;
        require group 'cn=docker,ou=groups,dc=example,dc=com';
        require valid_user;
        satisfy all;
    }

    server {

        listen 443;
        server_name docker-registry-proxy;

        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        ssl on;
        ssl_certificate /etc/ssl/docker/docker-registry.crt;
        ssl_certificate_key /etc/ssl/docker/docker-registry.key;

        client_max_body_size 0;

        chunked_transfer_encoding on;

        location / {
            auth_ldap "Forbidden";
            auth_ldap_servers ldapserver;
            include docker-registry.conf;
        }

        location ~* /v1/repositories/(?<namespace>([^/]*))/ {
            auth_ldap "Forbidden";
            auth_ldap_servers ldapserver; 
            set $deny_write_request "";
            if ($request_method = PUT) {
                set $deny_write_request "W";
            }           
            if ($request_method = DELETE) { 
                set $deny_write_request "W";
            }           
            if ($remote_user != $namespace) {
                set $deny_write_request "${deny_write_request}A";
            }           
            if ($deny_write_request = 'WA') {
                return 401;     
            }           
            include docker-registry.conf;
        }       

        location /_ping {
            auth_basic off;
            include docker-registry.conf;
        }

        location /v1/_ping {
            auth_basic off;
            include docker-registry.conf;
        }

        location /v1/search {
            auth_basic off;
            include docker-registry.conf;
        }

    }

}
